snippet fixme "fixme reminder" b!
// FIXME(`echo $USER`${2}|`!v strftime("%Y-%m-%d")`): ${1:desc}
endsnippet

snippet note "note reminder" b!
// NOTE(`echo $USER`${2}|`!v strftime("%Y-%m-%d")`): ${1:desc}
endsnippet

snippet todo "todo reminder" b!
// TODO(`echo $USER`${2}|`!v strftime("%Y-%m-%d")`): ${1:desc}
endsnippet

# common functions
snippet main "main function" b
fn main() {
    ${VISUAL}${0:/* code */}
}
endsnippet

# conditionals
snippet if "if"
if ${1:/* condition */} {
    ${VISUAL}${0:/* code */}
}
endsnippet

# loops
snippet loop "loop" b
loop {
    ${VISUAL}${0:/* code */}
}
endsnippet

snippet "wh(ile)?" "while loop" br
while ${1:/* condition */} {
    ${VISUAL}${0:/* code */}
}
endsnippet

snippet for "for loop" b
for (${2:i} = 0; $2 < ${1:count}; ${3:$2++}) {
    ${VISUAL}${0:${VISUAL/(.*)/(?1::\/* code *\/)/}}
}
endsnippet

# data structures
snippet "st(ruct)?" "struct" br
struct ${1} {
    ${VISUAL}${0:/*
    var1: type,
    var2: type,
    var3: type
    */}
}
endsnippet

snippet "en(um)?" "enum" br
enum ${1} {
    ${VISUAL}${0:/*
    attr1 = 0,
    attr2 = 1,
    attr3 = 2
    */}
}
endsnippet

# common statements
snippet pr "println"
io::println("${0}");
endsnippet

snippet fmt "print fmt?"
io::println(fmt!("$1: %?", ${1}));
endsnippet

snippet match "pattern match" b
match ${1} {
    ${2}    =>  { io::println("first match") }
    _     =>  { io::println("default") }
}
endsnippet
